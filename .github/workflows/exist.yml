# This workflow builds a xar archive, deploys it into exist and execute its test suites.
# It also includes code for using semantic-release to upload packages as part of GitHub releases
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: exist-db CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
       matrix:
         exist-version: [latest, release]
         node-version: [20, 22]
    # TODO: see #563 could still be usefull for gulp builds 
    # services:
    #   # Label used to access the service container
    #   exist:
    #     image: existdb/existdb:${{ matrix.exist-version}}
    #     ports:
    #       - 8080:8080

    steps:
      # Checkout code
      - uses: actions/checkout@v4       

      # Build Frontend
      - name: Build Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm start
            
      # Deploy Package in Container
      - name: Start exist-ci containers
        run: |
          docker run -dit -p 8080:8080 -v ${{ github.workspace }}/target:/exist/autodeploy \
          --name exist --rm --health-interval=1s --health-start-period=1s \
          duncdrum/existdb:${{ matrix.exist-version }}
      
      - name: wait for install to finish
        timeout-minutes: 3
        run: |
          while ! docker logs exist | grep -q "Server has started"; \
          do sleep 6s; \
          done

      # Testing 
      - name: Run Unit Tests     
        run: npm test
  
  # TODO: Add upload to dockerhub   
  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 22
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Create package
  #       run: npm run build
  #     - name: Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npx semantic-release
    

